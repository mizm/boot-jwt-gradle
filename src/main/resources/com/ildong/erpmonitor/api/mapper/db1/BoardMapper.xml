<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ildong.erpmonitor.api.mapper.db1.BoardMapper">

	<select id="ERPUserSearch" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
	        SELECT
			       DEPTNM 부서명 ,
			       D.EMPNO ,
			       D.HNAME EMP_NAME ,
			       b.CREATION_DATE as 계정생성일 ,
			       b.LAST_LOGON_DATE,
			       A.RESPONSIBILITY_NAME,
			       responsibility_key  ,
			       COMPANY ,
			       DEPT DEPT_CODE  ,
			       to_char(C.END_DATE) 권한종료일  ,
			       B.END_DATE APP_사용자종료일,
			        retdt AS 퇴사일
			FROM FND_RESPONSIBILITY_VL A,
			     FND_USER B,
			     FND_USER_RESP_GROUPS_DIRECT C,
			     zihr_pmas01_t D
			WHERE A.RESPONSIBILITY_ID = C.RESPONSIBILITY_ID
			 AND B.USER_ID = C.USER_ID
			 and B.user_name = D.empno
			-- and d.retdt is  null
			and C.END_DATE is  null
			-- AND    B.USER_NAME = ( '203132')
			 AND B.DESCRIPTION IN (#{userName})
			 ORDER BY 3,5
		]]>
	</select>

	<select id="AdminList" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
	        SELECT A.RESPONSIBILITY_NAME,
			       COMPANY ,
			       DEPT DEPT_CODE  ,
			       DEPTNM 부서명 ,
			       D.EMPNO ,
			       D.HNAME EMP_NAME ,
			       to_char(C.END_DATE) 권한종료일  ,
			       B.END_DATE 사용자종료일
			FROM FND_RESPONSIBILITY_VL A,
			     FND_USER B,
			     FND_USER_RESP_GROUPS_DIRECT C,
			     zihr_pmas01_t D
			WHERE A.RESPONSIBILITY_ID = C.RESPONSIBILITY_ID
			 AND B.USER_ID = C.USER_ID
			 and B.user_name = D.empno
			 and d.retdt is  null
			 and C.END_DATE is  null
			 and A.RESPONSIBILITY_NAME in ('시스템 관리자')
			union all
			SELECT A.RESPONSIBILITY_NAME,  null, null , null , null, to_char(b.user_id) , b.user_name ,B.END_DATE
			FROM FND_RESPONSIBILITY_VL A,
			     FND_USER B,
			     FND_USER_RESP_GROUPS_DIRECT C
			WHERE A.RESPONSIBILITY_ID = C.RESPONSIBILITY_ID
			  AND B.USER_ID = C.USER_ID
			  and C.END_DATE is  null
			  and A.RESPONSIBILITY_NAME in ('시스템 관리자')
		]]>
	</select>
	<select id="IndoorJobList" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
	        SELECT A.RESPONSIBILITY_NAME,
			       COMPANY ,
			       DEPT DEPT_CODE  ,
			       DEPTNM 부서명 ,
			       D.EMPNO ,
			       D.HNAME EMP_NAME ,
			       to_char(C.END_DATE) 권한종료일  ,
			       B.END_DATE 사용자종료일
			FROM FND_RESPONSIBILITY_VL A,
			     FND_USER B,
			     FND_USER_RESP_GROUPS_DIRECT C,
			     zihr_pmas01_t D
			WHERE A.RESPONSIBILITY_ID = C.RESPONSIBILITY_ID
			 	AND B.USER_ID = C.USER_ID
			 	and B.user_name = D.empno
			 	and d.retdt is  null
				and C.END_DATE is  null
			 	and A.RESPONSIBILITY_NAME in (  select RESPONSIBILITY_NAME from    ILDONG_GROUP_RESP_MATER where DEPT_GROUP_ID = '43' AND RESPONSIBILITY_NAME <> '인사-급여 Self Service')
			 	AND  SUBSTR(DEPT, 1, 1)   IN ('2')
			 	ORDER BY 3,5
		]]>
	</select>
	<select id="AppDevList" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
	       SELECT A.RESPONSIBILITY_NAME,
		       b.user_id ,
		       user_name||'-'||b.description 사번이름,
		       C.END_DATE 권한종료일 ,
		       B.END_DATE 사용자종료일 ,
		       a.menu_id,
		       a.prompt
		  FROM (select c.RESPONSIBILITY_NAME,
		               c.responsibility_key,
		               d.menu_id ,
		               d.prompt ,
		               c.RESPONSIBILITY_ID --a.*, b.*, c.* , d.*
		          from (SELECT TREE2.depth depth ,
		                       TREE2.menu_id menu_id ,
		                       lpad(' ', (TREE2.depth-1)*3) ||TREE2.prompt prompt ,
		                       F.user_function_name user_function_name ,
		                       TREE2.entry_sequence entry_sequence ,
		                       TREE2.sub_menu_id sub_menu_id ,
		                       TREE2.function_id function_id ,
		                       F.function_name function_name ,
		                       F.type type ,
		                       F.parameters parameters ,
		                       TREE2.grant_flag grant_flag ,
		                       TREE2.creation_date creation_date ,
		                       TREE2.last_update_date last_update_date
		                  FROM (SELECT TREE.depth,
		                               TL.menu_id,
		                               TL.prompt,
		                               TL.entry_sequence,
		                               NVL(TREE.sub_menu_id, -1) sub_menu_id,
		                               NVL(TREE.function_id, -1) function_id,
		                               TREE.grant_flag,
		                               TREE.creation_date,
		                               TREE.last_update_date
		                          FROM (SELECT level depth,
		                                       menu_id,
		                                       sub_menu_id,
		                                       function_id,
		                                       entry_sequence,
		                                       grant_flag,
		                                       creation_date,
		                                       last_update_date
		                                  FROM fnd_menu_entries START WITH menu_id = 67840
		                                   and entry_sequence= 3 CONNECT BY SUB_menu_id = PRIOR menu_id ) TREE ,
		                               fnd_menu_entries_tl TL
		                         WHERE TREE.menu_id = TL.menu_id
		                           AND TREE.entry_sequence = TL.entry_sequence
		                           AND TL.language=userenv('LANG') ) TREE2 ,
		                       fnd_form_functions_vl F
		                 WHERE F.function_id(+) = TREE2.function_id
		                   AND NVL(F.type, 'NULL') IN ('NULL',
		                               'JSP',
		                               'WWW',
		                               'WWK',
		                               'FORM')
		                   and GRANT_FLAG = 'Y'
		                   and PROMPT is not null ) d ,
		               fnd_responsibility_vl c
		         WHERE C.menu_id = D.menu_id) A,
				       FND_USER B,
				       FND_USER_RESP_GROUPS_DIRECT C
				 WHERE A.RESPONSIBILITY_ID = C.RESPONSIBILITY_ID
				   AND B.USER_ID = C.USER_ID
				   AND b.END_DATE IS NULL
				   and  C.END_DATE IS  NULL
		
		 		order by 1
		]]>
	</select>
	<select id="OutdoorToIndoor" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
				select BFDEPT2 발령전_코드 ,BFDEPTNM2 발령전_부서명, AFDEPT2 발령후_코드 ,AFDEPTNM2 발령후_부서명 , hname 이름 ,empno ,ORDDT 부서 from (
				   SELECT *
					  FROM (SELECT DENSE_RANK() OVER(PARTITION BY A.RESNO
					                 ORDER BY ORDDT DESC) AS SEQ,
					               A.*
					          FROM (SELECT MAX(AFDEPT) OVER (PARTITION BY A.RESNO
					                         ORDER BY ORDDT DESC, ORDSEQ DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS BFDEPT2,
					                       MAX(AFDEPTNM) OVER (PARTITION BY A.RESNO
					                         ORDER BY ORDDT DESC, ORDSEQ DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS BFDEPTNM2,
					                       AFDEPT AS AFDEPT2,
					                       AFDEPTNM AS AFDEPTNM2,
					                       A.*
					                  FROM ZIHR_PORD01_T A,
					                       ZIHR_PMAS01_T B
					                 WHERE A.RESNO = B.RESNO
					                   AND B.RETDT IS NULL) A
					         WHERE BFDEPT2 <> AFDEPT2 )
					 WHERE SEQ = 1
					   AND SUBSTR(BFDEPT2, 1, 2) IN ('43','41')
					   AND SUBSTR(AFDEPT2, 1, 2) NOT IN ('43','41')
					  -- AND ORDDT >= '20190101'
					    )
					 where orddt >= (#{date})
					 order by  4,5,6
		 ]]>
	</select>
	<select id="SysSystemUser" parameterType="String"
			resultType="hashmap">
	    <![CDATA[
				select * from APPS.iduser_audit_mon_t where TO_CHAR(SDATE,'YYYYMM') =  (#{date})
		 ]]>
	</select>
	<select id="ResponsibiltyList" parameterType="String"
			resultType="hashmap">
	    <![CDATA[
				select RESPONSIBILITY_NAME from FND_RESPONSIBILITY_VL
		 ]]>
	</select>
	<select id="MonthLeaver" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
				SELECT
				       COMPANY ,
				       DEPT DEPT_CODE  ,
				       DEPTNM 부서명 ,
				       D.EMPNO 사번,
				       D.HNAME 이름 ,
				       JIKGUBNM,
				       coentdt 입사일  ,
				       retdt   퇴사일 ,
				       b.last_logon_date erp마지막접속일,
				       B.end_date ERP종료일
				
				FROM
				     FND_USER B,
				     zihr_pmas01_t D
				WHERE  B.user_name = D.empno
				-- and d.retdt is  null
				--and b.end_date is null
				AND TO_CHAR(RETDT,'YYYYMM') =  (#{date})
				order by 1,2,3
		 ]]>
	</select>
	<select id="NoRegister" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
				SELECT

				       b.USER_NAME ,
				       b.DESCRIPTION EMP_NAME ,
				       b.CREATION_DATE,
				       b.LAST_LOGON_DATE,
				       A.RESPONSIBILITY_NAME,
				       responsibility_key  ,
				       to_char(C.END_DATE) 권한종료일  ,
				       B.END_DATE APP_사용자종료일
				FROM FND_RESPONSIBILITY_VL A,
				     FND_USER B,
				     FND_USER_RESP_GROUPS_DIRECT C
				WHERE A.RESPONSIBILITY_ID = C.RESPONSIBILITY_ID
				 AND B.USER_ID = C.USER_ID
				 and b.end_date is null
				 and  C.END_DATE is  null
				 AND   B.USER_NAME in (select  user_name from  FND_USER
										where end_date is null
				  						and user_name not in (select empno empno from zihr_pmas01_t )

)
 ORDER BY 1,2

		 ]]>
	</select>
	<select id="LeaverERP" parameterType="String"
		resultType="hashmap">
	    <![CDATA[
				SELECT
				       COMPANY ,
				       DEPT DEPT_CODE  ,
				       DEPTNM 부서명 ,
				       D.EMPNO ,
				       D.HNAME EMP_NAME ,
				       B.END_DATE 사용자종료일
				FROM
				     FND_USER B,
				     zihr_pmas01_t D
				WHERE  B.user_name = D.empno
				-- and d.retdt is  null
				 and b.end_date is null
				 and B.user_name in (  select  a.empno
							from    zihr.ZIHR_PMAS01_T  a
							  where   a.retdt is not null)
				
				order by 3,4

		 ]]>
	</select>

	<select id="login" resultType="hashmap" parameterType="String">
	<![CDATA[
		     SELECT 
             (select  hname from ZIHR_PMAS01_T where empno = (#{userId})) as name,
             (select  dept from ZIHR_PMAS01_T where empno = (#{userId})) as teamCode ,
             (select  deptNM from ZIHR_PMAS01_T where empno = (#{userId})) as deptNm ,
             (select  wkp from ZIHR_PMAS01_T where empno = (#{userId})) as wkpCode ,
             (select  jikchak from ZIHR_PMAS01_T where empno = (#{userId})) as JIKCHAK
        FROM DUAL
		]]>
	</select>

</mapper>